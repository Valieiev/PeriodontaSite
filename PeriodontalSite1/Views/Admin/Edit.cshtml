@model PeriodontalSite1.ViewModel.Admin.AdminEditViewModel

@{
    /**/

    ViewBag.Title = "Edit";
}

<h2>Редактировать данные профиля</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div>
    @Html.ValidationSummary(true, "")
    @Html.HiddenFor(m => m.Id)


    <br />
    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.UserType, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.UserType, new { @class = "form-control" })
        </div>
    </div>
    <br />
    <div class="form-group">
        @Html.LabelFor(m => m.Address, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-4">
            <ul class="list-group">
                @for (var idx = 0; idx < Model.Roles.Count; idx++)
                {
                    var role = Model.Roles[idx];
                    <li class="list-group-item">
                        @role.Name
                        <div class="material-switch pull-right">
                            <input type="checkbox" name="@Html.NameFor(x => x.Members)" id="@Html.IdFor(x => Model.Roles[idx])" value="@role.Name" @(Model.Members.Contains(role.Name) ? "checked" : "")>
                            <label class="label-success" for="@Html.IdFor(x => x.Roles[idx])"></label>
                        </div>
                    </li>
                }
            </ul>
        </div>
        <div style="clear: both"></div>
    </div>
    <br />
    <br />
    <div>
        <div>
            <input type="submit" value="Сохранить" />
        </div>
    </div>
</div>
}